// Допустим, у нас есть некий объект, который надо «умным способом» перебрать.
// Например, range – диапазон чисел от from до to, и мы хотим, чтобы for (let num of range) 
//«перебирал» этот объект. При этом под перебором мы подразумеваем перечисление чисел от from до to.
// Объект range без итератора:
let range = {
  from: 1,
  to: 5
};
// хотим сделать перебор
// for (let num of range) ...

//Для возможности использовать объект в for..of нужно создать в нём свойство с названием Symbol.iterator (системный символ).
// При вызове метода Symbol.iterator перебираемый объект должен возвращать другой объект («итератор»), 
// который умеет осуществлять перебор.
// По стандарту у такого объекта должен быть метод next(), 
// который при каждом вызове возвращает очередное значение и проверяет, окончен ли перебор.

'use strict';

// сделаем объект range итерируемым
range[Symbol.iterator] = function() {
  let current = this.from;
  let last = this.to;
  // метод должен вернуть объект с методом next()
  return {
    next() {
      if (current <= last) {
        return {
          done: false,
          value: current++
        };
      } else {
        return {
          done: true
        };
      }
    }
  }
};

for (let num of range) {
  alert(num); // 1, затем 2, 3, 4, 5
}